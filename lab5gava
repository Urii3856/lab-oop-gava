// Інтерфейс
interface PersonActions {
    String getFullName();
    int getAge();
}

// Батьківський клас
class Person implements PersonActions {
    private String surname;
    private String name;
    private int age;

    {
        System.out.println("Створюється нова людина...");
    }

    public Person(String surname, String name, int age) {
        this.surname = surname;
        this.name = name;
        this.age = age;
    }

    @Override
    public String getFullName() {
        return surname + " " + name;
    }

    @Override
    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }
}

// Клас-нащадок Student
class Student extends Person {
    private String group;
    private static int count = 0; // статичне поле

    {
        System.out.println("Створюється новий студент...");
    }

    public Student(String surname, String name, int age, String group) {
        super(surname, name, age);
        this.group = group;
        count++;
    }

    public String getGroup() {
        return group;
    }

    public void setGroup(String group) {
        this.group = group;
    }

    public static int getCount() {
        return count;
    }

    // метод порівняння студентів
    public boolean equals(Student other) {
        return this.getFullName().equals(other.getFullName())
                && this.getAge() == other.getAge()
                && this.group.equals(other.group);
    }
}

// Головний клас
public class Main {
    public static void main(String[] args) {
        // Створення студентів
        Student s1 = new Student("Лазаренко", "Юрій", 18, "IPZ-11");
        Student s2 = new Student("Петренко", "Олег", 19, "IPZ-11");
        Student s3 = new Student("Іваненко", "Анна", 18, "IPZ-12");

        // Вивід даних
        System.out.println("Name: " + s1.getFullName() + ", Age: " + s1.getAge() + ", Group: " + s1.getGroup());
        System.out.println("Name: " + s2.getFullName() + ", Age: " + s2.getAge() + ", Group: " + s2.getGroup());

        // Зміна віку студента
        s2.setAge(20);
        System.out.println("New age of s2: " + s2.getAge());

        // Використання статичного поля
        System.out.println("Total number of students: " + Student.getCount());

        // Порівняння
        System.out.println("s1 equals s2? " + s1.equals(s2));
        System.out.println("s1 equals s3? " + s1.equals(s3));
    }
}
